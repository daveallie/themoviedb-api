---
http_interactions:
- request:
    method: get
    uri: http://api.themoviedb.org/3/credit/5256c8b219c2956ff6047cd8?api_key=c29379565234e20d7cbf4f2e835c3e41&language=en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      User-Agent:
      - rest-client/2.1.0 (darwin19.4.0 x86_64) ruby/2.7.1p83
      Content-Type:
      - application/json; charset=utf-8
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Host:
      - api.themoviedb.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sun, 28 Jun 2020 05:22:41 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=21600
      X-Memc:
      - MISS, STORE
      X-Memc-Key:
      - 2417434868a2ae7b00cdb95c690418fa
      X-Memc-Age:
      - '0'
      X-Memc-Expires:
      - '21600'
      Etag:
      - W/"585f8b19f77e7000af435f39f0f11b1d"
      Last-Modified:
      - Sun, 28 Jun 2020 05:22:41 GMT
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 c212c30fb2998022a12f1d7e1d4dd590.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SYD1-C2
      X-Amz-Cf-Id:
      - XfhfU4t1X-3Bl6qCnTgYuAWNXB-7G-xwmkhP2Veegt5xQhArZGDamQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 28 Jun 2020 05:22:42 GMT
recorded_with: VCR 6.0.0
