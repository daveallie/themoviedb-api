---
http_interactions:
- request:
    method: get
    uri: http://api.themoviedb.org/3/tv/on_the_air?api_key=c29379565234e20d7cbf4f2e835c3e41&language=en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      User-Agent:
      - rest-client/2.1.0 (darwin19.4.0 x86_64) ruby/2.7.1p83
      Content-Type:
      - application/json; charset=utf-8
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Host:
      - api.themoviedb.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sun, 28 Jun 2020 05:23:11 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=21600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 31efcfadb9bf42888048a4e21662d761.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SYD1-C2
      X-Amz-Cf-Id:
      - b5daIRNFM22qbu_3S72R2_CT01R9k7gv7g3Is4fr3JKZDyZL_1BMzQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 28 Jun 2020 05:23:11 GMT
recorded_with: VCR 6.0.0
